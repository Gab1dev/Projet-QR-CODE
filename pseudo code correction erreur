def bits_de_correction(liste):
    """ Fonction qui renvoie les 3 bits de contrÃ´le d'une liste de 4 bits"""

    m1 = liste[0]
    m2 = liste[1]
    m3 = liste[2]
    m4 = liste[3]

    c1 = m1 ^ m2 ^ m4
    c2 = m1 ^ m3 ^ m4
    c3 = m2 ^ m3 ^ m4 

    return [c1, c2, c3]


def correction_erreurs(matrice):
    """ Prend une liste de 7 bits et la corrige s'il y a une erreur"""

    matrice_corrigee = []

    for liste in matrice:
        
        m1 = liste[0]
        m2 = liste[1]
        m3 = liste[2]
        m4 = liste[3]

        c1 = liste[4]
        c2 = liste[5]
        c3 = liste[6]

        erreurs = [0, 0, 0]           # liste qui contient les erreurs des bits de contrÃ´le (1 => erreur)

        controle = bits_de_correction([m1, m2, m3, m4])

        if controle[0] != c1:
            erreurs[0] = 1
        if controle[1] != c2:
            erreurs[1] = 1
        if controle[2] != c3:
            erreurs[2] = 1

        if (erreurs[0] == 1) and (erreurs[1] == 1) and (erreurs[2] == 1):
            if m4 == 0:
                m4 = 1
            else:
                m4 = 0
        elif (erreurs[0] == 1) and (erreurs[1] == 1):
            if m1 == 0:
                m1 = 1
            else:
                m1 = 0
        elif (erreurs[0] == 1) and (erreurs[2] == 1):
            if m2 == 0:
                m2 = 1
            else:
                m2 = 0
        elif (erreurs[1] == 1) and (erreurs[2] == 1):
            if m3 == 0:
                m3 = 1
            else:
                m3 = 0

        matrice_corrigee.append([m1, m2, m3, m4])

    return matrice_corrigee
